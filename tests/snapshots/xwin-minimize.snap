---
source: src/main.rs
expression: help_text
---
Runs the specified build command, detecting all of the headers and libraries
used by the build, and generating a file that can be used to filter future splat
operations, and optionally move only the user files to a new directory

This command is only intended to work with cargo builds

This command requires that `strace`, `clang-cl` and `lld-link` are installed and
_probably_ only works on Linux.

Usage: minimize [OPTIONS]

Options:
      --include-debug-libs
          The MSVCRT includes (non-redistributable) debug versions of the
          various libs that are generally uninteresting to keep for most usage

      --include-debug-symbols
          The MSVCRT includes PDB (debug symbols) files for several of the
          libraries that are generally uninteresting to keep for most usage

      --disable-symlinks
          By default, symlinks are added to both the CRT and `WindowsSDK` to
          address casing issues in general usage.
          
          For example, if you are compiling C/C++ code that does `#include
          <windows.h>`, it will break on a case-sensitive file system, as the
          actual path in the `WindowsSDK` is `Windows.h`. This also applies even
          if the C/C++ you are compiling uses correct casing for all CRT/SDK
          includes, as the internal headers also use incorrect casing in most
          cases.

      --preserve-ms-arch-notation
          By default, we convert the MS specific `x64`, `arm`, and `arm64`
          target architectures to the more canonical `x86_64`, `aarch`, and
          `aarch64` of LLVM etc when creating directories/names.
          
          Passing this flag will preserve the MS names for those targets.

      --use-winsysroot-style
          Use the /winsysroot layout, so that clang-cl's /winsysroot flag can be
          used with the output, rather than needing both -vctoolsdir and
          -winsdkdir. You will likely also want to use
          --preserve-ms-arch-notation and --disable-symlinks for use with
          clang-cl on Windows

      --map <MAP>
          The path of the filter file that is generated. Defaults to
          ./.xwin-cache/xwin-map.toml

      --output <OUTPUT>
          The root splat output directory. Defaults to `./.xwin-cache/splat` if
          not specified

      --minimize-output <MINIMIZE_OUTPUT>
          The root output directory for the minimized set of files discovered
          during the build. If not specified only the map file is written in
          addition to the splat

      --copy
          Copies files from the splat directory rather than moving them. Only
          used if --output is specified

      --target <TARGET>
          The cargo build triple to compile for. Defaults to
          `x86_64-pc-windows-msvc` if not specified

      --manifest-path <MANIFEST_PATH>
          The path of the manifest to compile. Defaults to Cargo.toml if not
          specified

      --preserve-strace
          If supplied, the strace output is persisted to disk rather than being
          deleted once the compilation has finished

  -h, --help
          Print help (see a summary with '-h')

  -V, --version
          Print version
