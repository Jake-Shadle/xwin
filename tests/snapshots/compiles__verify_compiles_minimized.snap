---
source: tests/compiles.rs
expression: "std::fs::read_to_string(map_path).unwrap()"
---
[crt.headers]
filter = [
    "__msvc_iter_core.hpp",
    "__msvc_sanitizer_annotate_container.hpp",
    "algorithm",
    "cassert",
    "cctype",
    "cfloat",
    "climits",
    "concurrencysal.h",
    "crtdefs.h",
    "cstddef",
    "cstdint",
    "cstdio",
    "cstdlib",
    "cstring",
    "cwchar",
    "eh.h",
    "exception",
    "excpt.h",
    "initializer_list",
    "iosfwd",
    "isa_availability.h",
    "limits",
    "limits.h",
    "list",
    "new",
    "sal.h",
    "setjmp.h",
    "stdint.h",
    "string",
    "type_traits",
    "use_ansi.h",
    "utility",
    "vadefs.h",
    "vcruntime.h",
    "vcruntime_exception.h",
    "vcruntime_new.h",
    "vcruntime_new_debug.h",
    "vcruntime_string.h",
    "vector",
    "xatomic.h",
    "xkeycheck.h",
    "xmemory",
    "xstring",
    "xtr1common",
    "xutility",
    "yvals.h",
    "yvals_core.h",
]

[crt.libs]
filter = [
    "x86_64/msvcrt.lib",
    "x86_64/vcruntime.lib",
]

[crt.libs.symlinks]
"x86_64/msvcrt.lib" = ["MSVCRT.lib"]

[sdk.headers]
filter = [
    "shared/WTypesbase.h",
    "shared/apiset.h",
    "shared/apisetcconv.h",
    "shared/basetsd.h",
    "shared/bcrypt.h",
    "shared/cderr.h",
    "shared/driverspecs.h",
    "shared/guiddef.h",
    "shared/inaddr.h",
    "shared/kernelspecs.h",
    "shared/ktmtypes.h",
    "shared/minwindef.h",
    "shared/poppack.h",
    "shared/pshpack1.h",
    "shared/pshpack2.h",
    "shared/pshpack4.h",
    "shared/pshpack8.h",
    "shared/rpc.h",
    "shared/rpcasync.h",
    "shared/rpcdce.h",
    "shared/rpcdcep.h",
    "shared/rpcndr.h",
    "shared/rpcnterr.h",
    "shared/rpcsal.h",
    "shared/sdkddkver.h",
    "shared/sdv_driverspecs.h",
    "shared/specstrings.h",
    "shared/specstrings_strict.h",
    "shared/specstrings_undef.h",
    "shared/stralign.h",
    "shared/tvout.h",
    "shared/winapifamily.h",
    "shared/windef.h",
    "shared/winerror.h",
    "shared/winpackagefamily.h",
    "shared/winsmcrd.h",
    "shared/wnnc.h",
    "shared/wtypes.h",
    "ucrt/assert.h",
    "ucrt/corecrt.h",
    "ucrt/corecrt_malloc.h",
    "ucrt/corecrt_memcpy_s.h",
    "ucrt/corecrt_memory.h",
    "ucrt/corecrt_search.h",
    "ucrt/corecrt_share.h",
    "ucrt/corecrt_stdio_config.h",
    "ucrt/corecrt_terminate.h",
    "ucrt/corecrt_wconio.h",
    "ucrt/corecrt_wctype.h",
    "ucrt/corecrt_wdirect.h",
    "ucrt/corecrt_wio.h",
    "ucrt/corecrt_wprocess.h",
    "ucrt/corecrt_wstdio.h",
    "ucrt/corecrt_wstdlib.h",
    "ucrt/corecrt_wstring.h",
    "ucrt/corecrt_wtime.h",
    "ucrt/crtdbg.h",
    "ucrt/ctype.h",
    "ucrt/errno.h",
    "ucrt/float.h",
    "ucrt/inttypes.h",
    "ucrt/malloc.h",
    "ucrt/math.h",
    "ucrt/stdio.h",
    "ucrt/stdlib.h",
    "ucrt/string.h",
    "ucrt/sys/stat.h",
    "ucrt/sys/types.h",
    "ucrt/wchar.h",
    "um/DbgHelp.h",
    "um/PropIdl.h",
    "um/PropIdlBase.h",
    "um/Unknwn.h",
    "um/Unknwnbase.h",
    "um/WinBase.h",
    "um/WinNls.h",
    "um/WinUser.h",
    "um/Windows.h",
    "um/apiquery2.h",
    "um/cguid.h",
    "um/combaseapi.h",
    "um/coml2api.h",
    "um/commdlg.h",
    "um/consoleapi.h",
    "um/consoleapi2.h",
    "um/consoleapi3.h",
    "um/datetimeapi.h",
    "um/dde.h",
    "um/ddeml.h",
    "um/debugapi.h",
    "um/dlgs.h",
    "um/dpapi.h",
    "um/enclaveapi.h",
    "um/errhandlingapi.h",
    "um/fibersapi.h",
    "um/fileapi.h",
    "um/fileapifromapp.h",
    "um/handleapi.h",
    "um/heapapi.h",
    "um/ime_cmodes.h",
    "um/imm.h",
    "um/interlockedapi.h",
    "um/ioapiset.h",
    "um/jobapi.h",
    "um/jobapi2.h",
    "um/joystickapi.h",
    "um/libloaderapi.h",
    "um/lzexpand.h",
    "um/mciapi.h",
    "um/mcx.h",
    "um/memoryapi.h",
    "um/minidumpapiset.h",
    "um/minwinbase.h",
    "um/mmeapi.h",
    "um/mmiscapi.h",
    "um/mmiscapi2.h",
    "um/mmsyscom.h",
    "um/mmsystem.h",
    "um/msxml.h",
    "um/namedpipeapi.h",
    "um/namespaceapi.h",
    "um/nb30.h",
    "um/ncrypt.h",
    "um/oaidl.h",
    "um/objbase.h",
    "um/objidl.h",
    "um/objidlbase.h",
    "um/ole2.h",
    "um/oleauto.h",
    "um/oleidl.h",
    "um/playsoundapi.h",
    "um/processenv.h",
    "um/processthreadsapi.h",
    "um/processtopologyapi.h",
    "um/profileapi.h",
    "um/prsht.h",
    "um/realtimeapiset.h",
    "um/reason.h",
    "um/rpcnsi.h",
    "um/rpcnsip.h",
    "um/securityappcontainer.h",
    "um/securitybaseapi.h",
    "um/servprov.h",
    "um/shellapi.h",
    "um/stringapiset.h",
    "um/synchapi.h",
    "um/sysinfoapi.h",
    "um/systemtopologyapi.h",
    "um/threadpoolapiset.h",
    "um/threadpoollegacyapiset.h",
    "um/timeapi.h",
    "um/timezoneapi.h",
    "um/urlmon.h",
    "um/utilapiset.h",
    "um/verrsrc.h",
    "um/wincon.h",
    "um/wincontypes.h",
    "um/wincrypt.h",
    "um/winefs.h",
    "um/wingdi.h",
    "um/winioctl.h",
    "um/winnetwk.h",
    "um/winnt.h",
    "um/winperf.h",
    "um/winreg.h",
    "um/winscard.h",
    "um/winsock.h",
    "um/winspool.h",
    "um/winsvc.h",
    "um/winver.h",
    "um/wow64apiset.h",
]

[sdk.headers.symlinks]
"shared/WTypesbase.h" = ["wtypesbase.h"]
"shared/driverspecs.h" = ["DriverSpecs.h"]
"shared/specstrings.h" = ["SpecStrings.h"]
"um/DbgHelp.h" = ["dbghelp.h"]
"um/PropIdl.h" = ["propidl.h"]
"um/PropIdlBase.h" = ["propidlbase.h"]
"um/Unknwn.h" = ["unknwn.h"]
"um/Unknwnbase.h" = ["unknwnbase.h"]
"um/WinBase.h" = ["winbase.h"]
"um/WinNls.h" = ["winnls.h"]
"um/WinUser.h" = ["winuser.h"]
"um/Windows.h" = ["windows.h"]

[sdk.libs]
filter = [
    "ucrt/x86_64/ucrt.lib",
    "um/x86_64/AdvAPI32.Lib",
    "um/x86_64/UserEnv.Lib",
    "um/x86_64/WS2_32.Lib",
    "um/x86_64/bcrypt.lib",
    "um/x86_64/kernel32.Lib",
    "um/x86_64/ntdll.lib",
]

[sdk.libs.symlinks]
"um/x86_64/AdvAPI32.Lib" = [
    "ADVAPI32.lib",
    "advapi32.lib",
]
"um/x86_64/UserEnv.Lib" = [
    "USERENV.lib",
    "userenv.lib",
]
"um/x86_64/WS2_32.Lib" = [
    "WS2_32.lib",
    "ws2_32.lib",
]
"um/x86_64/bcrypt.lib" = ["BCRYPT.lib"]
"um/x86_64/kernel32.Lib" = [
    "KERNEL32.lib",
    "Kernel32.lib",
    "kernel32.lib",
]
"um/x86_64/ntdll.lib" = ["NTDLL.lib"]

