on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # make sure all code has been formatted with rustfmt
      - name: check rustfmt
        run: |
          rustup component add rustfmt
          cargo fmt -- --check --color always

      # run clippy to verify we have no warnings
      - run: cargo fetch
      - name: cargo clippy
        run: |
          rustup component add clippy
          cargo clippy --all-targets --all-features -- -D warnings

  check_compiles:
    name: Verify compiles
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      # Add the actual target we compile for in the test
      - run: rustup target add x86_64-pc-windows-msvc
      - name: symlinks
        run: |
          set -eux
          sudo ln -s clang-12 /usr/bin/clang-cl
          sudo ln -s llvm-ar-12 /usr/bin/llvm-lib
          sudo ln -s lld-link-12 /usr/bin/lld-link
          sudo ln -s lld-12 /usr/bin/ld.lld
          clang++ -v
          ld.lld -v
          llvm-lib -v
          clang-cl -v
          lld-link --version
      - run: cargo fetch
      - name: cargo test build
        run: cargo build --tests --release
      - name: cargo test
        run: cargo test --release verify_compiles

  check_deterministic:
    name: Verify deterministic
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo fetch
      - name: cargo test build
        run: cargo build --tests --release
      - name: cargo test
        run: cargo test --release verify_deterministic

  check_cli:
    name: Verify CLI
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo fetch
      - name: cargo test build
        run: cargo build --tests
      - name: cargo test
        run: cargo test cli_help

  deny-check:
    name: cargo-deny
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check
          arguments: --all-features

  publish-check:
    name: Publish Check
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo fetch
      - name: cargo publish check
        run: cargo publish --dry-run

  linux:
    name: Linux Build
    needs: [deny-check]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build
        with:
          target: x86_64-unknown-linux-musl

  macos:
    name: MacOS Build
    needs: [deny-check]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-12
    strategy:
      matrix:
        platform:
          - target: x86_64-apple-darwin
          - target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build
        with:
          target: ${{ matrix.platform.target }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "xwin*"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
